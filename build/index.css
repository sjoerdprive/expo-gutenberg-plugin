/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./scss/main.scss ***!
  \***************************************************************************************************************************************************************************************************************************************/
@keyframes fold {
  0% {
    width: 100%;
    height: 100%;
    border-radius: 0px;
  }
  50% {
    width: 40px;
    height: 40px;
    border-radius: 40px;
  }
  100% {
    position: absolute;
    width: 40px;
    height: 40px;
    border-radius: 40px;
    transform: translate(20px, 20px);
  }
}
@keyframes unfold {
  0% {
    position: absolute;
    overflow: hidden;
    transform: translate(20px, 20px);
    width: 40px;
    height: 40px;
    border-radius: 40px;
  }
  50% {
    position: static;
    overflow: hidden;
    transform: translate(0px, 0px);
    width: 40px;
    height: 40px;
    border-radius: 0px;
  }
  100% {
    overflow: visible;
    width: 100%;
    height: 100%;
  }
}
.draggable-root {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}
.draggable-root .content-wrapper {
  width: 100%;
  height: 100%;
}
.draggable-root .content-image {
  width: 100%;
  height: 100%;
  max-height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.draggable-root.selected {
  outline: 3px solid seagreen;
}
.draggable-root.dragging .content-wrapper {
  animation: fold 300ms linear 0s 1 forwards;
}
.draggable-root.dragging .content-wrapper,
.draggable-root.dragging .content-wrapper * {
  overflow: hidden;
}
.draggable-root.placed .content-wrapper {
  animation: unfold 300ms linear 0s 1 forwards;
}

.menu-section {
  flex: 1 0 300px;
  padding: 1rem;
  position: sticky;
  z-index: 1000;
  background-color: rgba(255, 255, 255, 0.8) !important;
  left: 0;
  min-height: -moz-fit-content;
  min-height: fit-content;
}
.menu-section .prop-control {
  margin-bottom: 1em;
}

.context-menu {
  position: absolute;
  z-index: 1000;
  opacity: 1;
  transition: opacity 0.1s linear;
}
.context-menu.hidden {
  opacity: 0;
  pointer-events: none;
}

.expo-canvas {
  width: 100%;
}
.expo-canvas .grid {
  position: relative;
  display: grid;
  overflow: hidden;
  margin: 0 auto;
}
@media (max-width: 600px) {
  .expo-canvas .grid {
    display: flex;
    flex-direction: column;
    width: 100% !important;
    gap: 1rem;
    height: -moz-fit-content !important;
    height: fit-content !important;
  }
}
.expo-canvas,
.expo-canvas * {
  color: white;
}
.expo-canvas:not(.draggable-root *),
.expo-canvas *:not(.draggable-root *) {
  background-color: #000000;
}
.expo-canvas .grid-bg {
  background: url(images/grid.ca70ec8e.png);
  background-color: transparent;
  background-repeat: repeat;
  opacity: 0;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transition: opacity 0.2s linear;
}
.expo-canvas .grid-bg.show {
  opacity: 1;
}
.expo-canvas .canvas-menu {
  position: absolute;
  max-width: -moz-fit-content;
  max-width: fit-content;
  display: flex;
  flex-direction: column;
  right: 0;
  top: 0;
  z-index: 160;
  background-color: white;
  border-radius: 5px;
  transition: opacity 0.1s linear;
}

.editor-styles-wrapper:has(.expo-root) {
  padding: 0 1em !important;
  margin: 0 auto;
}

.expo-root {
  max-width: unset;
  gap: 1em;
  position: relative;
  display: flex;
  flex-wrap: wrap;
  overflow: auto;
}

/*# sourceMappingURL=index.css.map*/